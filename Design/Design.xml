<?xml version="1.0" encoding="UTF-8"?>
<d:design xmlns:d="http://cern.ch/quasar/Design" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" projectShortName="IoLSlowControlServer" xsi:schemaLocation="http://cern.ch/quasar/Design Design.xsd ">
  <d:class name="IoLMotor">
    <d:devicelogic/>
    <d:configentry dataType="OpcUa_UInt16" name="id" storedInDeviceObject="true">
  </d:configentry>
    <d:configentry dataType="UaString" name="server_address" storedInDeviceObject="true">
  </d:configentry>
    <d:configentry dataType="OpcUa_UInt16" name="port" defaultValue="5000" storedInDeviceObject="true">
    </d:configentry>
    <d:cachevariable name="position" addressSpaceWrite="forbidden" dataType="OpcUa_Int32" initializeWith="valueAndStatus" nullPolicy="nullAllowed" initialStatus="OpcUa_BadWaitingForInitialData">
    </d:cachevariable>
    <d:cachevariable name="positionSetPoint" addressSpaceWrite="delegated" dataType="OpcUa_Int32" initializeWith="valueAndStatus" nullPolicy="nullForbidden" initialValue="-99999" initialStatus="OpcUa_BadWaitingForInitialData">
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="refresh_period_ms" nullPolicy="nullAllowed" addressSpaceWrite="delegated">
  </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Boolean" name="is_moving" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
  </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Double" name="torque" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Double" name="temperature_C" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
  </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_UInt32" name="speed_readout" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
    </d:cachevariable>
    <!--operation_status corresponds to a bitmask. The codes are documented in the manual-->
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_UInt16" name="operation_status" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Float" name="rpi_cpu" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Float" name="rpi_mem" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
	</d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="acceleration" nullPolicy="nullForbidden" addressSpaceWrite="regular">
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="deceleration" nullPolicy="nullForbidden" addressSpaceWrite="regular">
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="speed_setpoint" nullPolicy="nullForbidden" addressSpaceWrite="regular">
    </d:cachevariable>
	<!-- methods that allow for standalone motor operation -->
    <d:method name="start_move" executionSynchronicity="synchronous">
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="stop" executionSynchronicity="synchronous">
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="configure_motor" executionSynchronicity="synchronous">
      <d:argument dataType="UaString" name="config_json"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
  </d:class>
  <d:class name="IoLPowerMeter">
    <d:devicelogic></d:devicelogic>
    <d:configentry dataType="UaString" name="serial_number" storedInDeviceObject="true">
  	</d:configentry>
    <d:configentry dataType="UaString" name="port" storedInDeviceObject="true">
  	</d:configentry>
    <d:configentry dataType="OpcUa_UInt16" name="baud_rate" storedInDeviceObject="true">
  	</d:configentry>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="device_port" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="N/A">
  	</d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_Int16" name="range_selected" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" defaultConfigInitializerValue="2">
 	</d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="measurement_mode" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" defaultConfigInitializerValue="0">
  	</d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="wavelength" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" defaultConfigInitializerValue="266">
 	</d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="average_window" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" defaultConfigInitializerValue="1">
    	<d:configRestriction>
    		<d:restrictionByBounds minInclusive="1" maxInclusive="6" /></d:configRestriction>
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Double" name="energy_reading" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="0.0">
  	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_Double" name="average_reading"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="0.0">
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="trigger_threshold" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" defaultConfigInitializerValue="1">
  	</d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="pulse_width" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" defaultConfigInitializerValue="1">
  	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="status" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="unknown">
  	</d:cachevariable>
    <!-- A couple of variables that just list the available options for various range selectable methods -->
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="range_options" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="invalid">
  	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="measurement_options" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="invalid">
  	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="average_options" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="invalid">
  	</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="pulse_length_options" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="invalid">
  	</d:cachevariable>
    <!-- Operational methods. these are the only ones that are exposed to the operator. Some require specific authentication -->
    <d:method name="init" executionSynchronicity="synchronous">
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="set_port" executionSynchronicity="synchronous">
    	<d:argument dataType="UaString" name="device_port"></d:argument></d:method>
    <d:method name="set_average" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_UInt16" name="target_value"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="set_range" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_Int16" name="target_value"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="set_pulse_width" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_UInt16" name="target_value"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="set_threshold" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_UInt16" name="target_value"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="set_wavelength" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_UInt16" name="target_value"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="set_measurement_mode" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_UInt16" name="target_value"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="reset" executionSynchronicity="synchronous"/><d:method
    	name="stop" executionSynchronicity="synchronous">
	<d:returnvalue dataType="UaString" name="response"></d:returnvalue>
</d:method>
  </d:class>  
  <d:class name="IoLLaserUnit">
    <d:devicelogic />
    <d:configentry dataType="UaString" name="serial_number" storedInDeviceObject="true">
  	</d:configentry>
    <d:configentry dataType="UaString" name="port"
    	storedInDeviceObject="true" defaultValue="auto">
    </d:configentry>
    <d:configentry dataType="OpcUa_UInt16" name="baud_rate"
    	storedInDeviceObject="true" defaultValue="9600">
    </d:configentry>
	<!-- Cache variables. Some of these are writeable, others not -->
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString" name="device_port" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="N/A">
  	</d:cachevariable>   
    <!--  units in microseconds -->
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="qswitch_us" nullPolicy="nullForbidden" addressSpaceWrite="delegated">
    	<d:configRestriction>
    		<d:restrictionByBounds minInclusive="1" maxInclusive="999" /></d:configRestriction>
    </d:cachevariable><!--units in kV-->
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_Float" name="discharge_voltage_kV" nullPolicy="nullForbidden" addressSpaceWrite="delegated">
    	<d:configRestriction>
    		<d:restrictionByBounds minExclusive="0.0"
    			maxInclusive="1.3" /></d:configRestriction>
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration"
    	dataType="OpcUa_Double" name="rep_rate_hz"
    	nullPolicy="nullForbidden" addressSpaceWrite="delegated"
    	defaultConfigInitializerValue="10.0">
    </d:cachevariable><!--this is a prescale setting. 0 means that one would get as many flashlamp discharges as laser shots coming out-->
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="rep_rate_divider" nullPolicy="nullForbidden" addressSpaceWrite="delegated">
		</d:cachevariable><!--read-only variable with number of flashes-->
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_UInt32" name="flash_count" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="0">
		</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Boolean" name="laser_shutter_open" nullPolicy="nullAllowed" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData">
		</d:cachevariable>
    <!--units in microseconds. how long before the laser shot should the shutter be open? Note that this should at least be as much as the time the shutter takes to open (about 200 us)-->
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="ext_shutter_time_pre_shot" nullPolicy="nullForbidden" addressSpaceWrite="delegated">  
    </d:cachevariable>
    <!--units in microseconds. how long should the shutter remain open-->   
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="ext_shutter_open_time_us" nullPolicy="nullForbidden" addressSpaceWrite="delegated">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="status_code"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="999">
    </d:cachevariable>
    <!-- Operation methods -->
    <d:method name="set_port" executionSynchronicity="synchronous">
		<d:argument dataType="UaString" name="device_port"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>
    </d:method>
    <!--local method to stop operation-->
    <d:method name="stop" executionSynchronicity="synchronous">
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>
    </d:method>
    <d:method name="check_status" executionSynchronicity="synchronous">
      <d:returnvalue dataType="OpcUa_UInt16" name="status" />
      <d:returnvalue dataType="UaString" name="description"></d:returnvalue>
    </d:method>
    <d:method name="configure_laser" executionSynchronicity="synchronous">
    	<d:argument dataType="UaString" name="config"></d:argument>
    	<d:returnvalue dataType="UaString" name="response"></d:returnvalue></d:method>
    <d:method name="single_shot" executionSynchronicity="synchronous">
    	<d:returnvalue dataType="UaString" name="response"></d:returnvalue></d:method>
    <d:method name="switch_shutter" executionSynchronicity="synchronous">
    	<d:argument dataType="OpcUa_Boolean" name="open"></d:argument>
    	<d:returnvalue dataType="UaString" name="response"></d:returnvalue></d:method>
    <d:method name="fire_standalone" executionSynchronicity="synchronous">
    	<d:argument dataType="OpcUa_Boolean" name="fire"></d:argument>
    	<d:returnvalue dataType="UaString" name="response"></d:returnvalue>
    </d:method>
  </d:class>
  <d:class name="IoLAttenuator">
    <d:devicelogic/>
    <d:configentry dataType="UaString" name="serial_number"
    	storedInDeviceObject="true" />
    <!-- Variables (none of these are writeable) --><!--intial value of maxval (0xFFFFx)  means to fetch it from the device stored settings-->
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="resolution_setting"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString"
    	name="device_port" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue='auto'>
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="baud_rate" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="38400">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_Int32" name="position" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="2147483647">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="acceleration"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="deceleration"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="max_speed" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="offset" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="idle_current_setting"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="moving_current_setting"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_Double" name="transmission"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="-1.0">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_UInt16" name="motor_state"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="65535">
    </d:cachevariable>
    <!-- Cache variables enumerating options -->
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString"
    	name="resolution_options" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="N/A">
    </d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="UaString"
    	name="motor_state_options" nullPolicy="nullForbidden"
    	addressSpaceWrite="forbidden"
    	initialStatus="OpcUa_BadWaitingForInitialData" initialValue="N/A">
    </d:cachevariable>

    <!-- Methods (these are the proper ways to set  parameters) -->
    <d:method name="configure_attenuator"
    	executionSynchronicity="synchronous">
		<d:argument dataType="UaString" name="json_config"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>
	</d:method>
	<!-- This is really the only method that one should use in normal operation -->
	<d:method name="set_transmission" executionSynchronicity="synchronous">
		<d:argument dataType="OpcUa_Double" name="transmission"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<!-- Below this point, these are 'advanced' methods, to refine the settings -->
    <d:method name="set_conn_details" executionSynchronicity="synchronous">
		<d:argument dataType="UaString" name="port"></d:argument>
		<d:argument dataType="OpcUa_UInt16" name="baud_rate"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>
	</d:method>
	<d:method name="stop" executionSynchronicity="synchronous">
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<d:method name="set_resolution" executionSynchronicity="synchronous">
		<d:argument dataType="OpcUa_UInt16" name="resolution_setting"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<d:method name="set_current" executionSynchronicity="synchronous">
		<d:argument dataType="OpcUa_UInt16" name="idle_setting"></d:argument>
		<d:argument dataType="OpcUa_UInt16" name="moving_setting"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<d:method name="set_acceleration" executionSynchronicity="synchronous">
		<d:argument dataType="OpcUa_UInt16" name="acceleration"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<d:method name="set_deceleration" executionSynchronicity="synchronous">
		<d:argument dataType="OpcUa_UInt16" name="deceleration"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<d:method name="set_max_speed" executionSynchronicity="synchronous">
		<d:argument dataType="OpcUa_UInt16" name="max_speed"></d:argument>
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
	<d:method name="get_status" executionSynchronicity="synchronous">
		<d:returnvalue dataType="UaString" name="response"></d:returnvalue>	
	</d:method>
</d:class>
  
  
  
  <d:class name="IoLPiezoController">
    <d:devicelogic/>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt16" name="output_number" nullPolicy="nullAllowed" addressSpaceWrite="forbidden">
      <!--Indicates the output number that will be controlled and is provided when adjusting-->
      <d:configRestriction>
        <d:restrictionByBounds minInclusive="0" maxInclusive="3"/>
      </d:configRestriction>
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_Double" name="max_volts" nullPolicy="nullForbidden" addressSpaceWrite="regular">
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="step_rate" nullPolicy="nullForbidden" addressSpaceWrite="regular">
    </d:cachevariable>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_UInt32" name="acceleration" nullPolicy="nullForbidden" addressSpaceWrite="regular">
    </d:cachevariable>
    <d:configentry dataType="OpcUa_UInt16" name="id"/>
  </d:class>
  
  <d:class name="IoLCIB">
    <d:devicelogic/>
    <d:configentry dataType="OpcUa_UInt16" name="id"/>
    <d:configentry dataType="UaString" name="server" defaultValue="localhost">
		</d:configentry>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_Float" name="load" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="-1.0">
		</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus" dataType="OpcUa_UInt16" name="state" nullPolicy="nullForbidden" addressSpaceWrite="forbidden" initialStatus="OpcUa_BadWaitingForInitialData" initialValue="9999">
		</d:cachevariable>
    <d:cachevariable initializeWith="valueAndStatus"
    	dataType="OpcUa_Boolean" name="external_interlock"
    	nullPolicy="nullForbidden" addressSpaceWrite="forbidden"
    	initialValue="OpcUa_False" initialStatus="OpcUa_BadWaitingForInitialData">
    </d:cachevariable>
  </d:class>
  <d:class name="IoLaserSystem">
    <d:devicelogic/>
    <d:configentry dataType="OpcUa_UInt16" name="id" isKey="true"/>
    <d:configentry dataType="UaString" name="location"/>
    <d:cachevariable initializeWith="configuration" dataType="OpcUa_Boolean" name="enabled" nullPolicy="nullForbidden" addressSpaceWrite="forbidden">
		</d:cachevariable>
    <d:hasobjects instantiateUsing="configuration" class="IoLLaserUnit" minOccurs="1" maxOccurs="1">
		</d:hasobjects>
    <d:hasobjects instantiateUsing="configuration" class="IoLMotor" minOccurs="2" maxOccurs="3">
		</d:hasobjects>
    <d:hasobjects instantiateUsing="configuration" class="IoLPiezoController" minOccurs="0" maxOccurs="3">
		</d:hasobjects>
    <d:hasobjects instantiateUsing="configuration" class="IoLAttenuator" maxOccurs="1" minOccurs="1">
		</d:hasobjects>
    <d:hasobjects instantiateUsing="configuration" class="IoLCIB" minOccurs="1" maxOccurs="1">
		</d:hasobjects>
    <d:method name="load_config" executionSynchronicity="synchronous">
      <d:argument dataType="UaString" name="config"/>
      <d:returnvalue dataType="UaString" name="response"/>
    </d:method>
    <d:method name="check_ready" executionSynchronicity="synchronous">
      <d:returnvalue dataType="OpcUa_Boolean" name="ready"/>
    </d:method>
    <d:method name="stop" executionSynchronicity="synchronous">
      <!--this method send immediate stop commands for all subsystems, starting by the iris. After this call one should recheck the state of the system as the motors may not be in the right state-->
    </d:method>
    <d:method name="fire_at_position" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_Int32" name="target_pos">
        <d:array minimumSize="3" maximumSize="3"/>
      </d:argument>
      <d:argument dataType="OpcUa_UInt16" name="num_pulses"/>
      <d:returnvalue dataType="UaString" name="answer"/>
    </d:method>
    <d:method name="fire_segment" executionSynchronicity="synchronous">
      <d:argument dataType="OpcUa_Int32" name="start_pos">
        <d:array minimumSize="3" maximumSize="3"/>
      </d:argument>
      <d:argument dataType="OpcUa_Int32" name="last_pos">
        <d:array maximumSize="3" minimumSize="3"/>
      </d:argument>
      <d:returnvalue dataType="UaString" name="answer"/>
    </d:method>
    <d:method name="execute_scan" executionSynchronicity="synchronous">
      <d:argument dataType="UaString" name="plan"/>
      <d:returnvalue dataType="UaString" name="answer"/>
    </d:method>
    <d:hasobjects instantiateUsing="configuration" class="IoLPowerMeter" minOccurs="1" maxOccurs="1">
    </d:hasobjects>
  </d:class>
  <d:root>
    <d:hasobjects class="IoLaserSystem" instantiateUsing="configuration"/>
  </d:root>
  <!--comment-->
</d:design>
